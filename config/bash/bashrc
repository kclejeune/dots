# source global environment
if [ -f /etc/bashrc ]; then
        . /etc/bashrc
fi

#########################################################
# Environment Variables
#########################################################

# system stuff
export LANG=en_US.UTF-8
export GPG_TTY=/dev/ttys000
export VISUAL=nvim
export EDITOR=nvim
export DEFAULT_USER="$(whoami)"
export CLICOLOR=1
export LSCOLORS=ExFxBxDxCxegedabagacad
export PATH=$HOME/.local/bin:$HOME/bin:$PATH

# user stuff
export TERM=xterm-256color
export XDG_CONFIG_HOME=$HOME/.config
export XDG_DATA_HOME=$HOME/.local/share
export ASDF_CONFIG_DIR=$XDG_CONFIG_HOME/asdf
export ASDF_DATA_DIR=$XDG_DATA_HOME/asdf
export ASDF_CONFIG_FILE=$ASDF_CONFIG_DIR/asdfrc
export ASDF_DEFAULT_TOOL_VERSIONS_FILENAME=$ASDF_CONFIG_DIR/tool-versions
export BAT_CONFIG_PATH=$XDG_CONFIG_HOME/bat/bat.conf
# --files: List files that would be searched but do not search
# --no-ignore: Do not respect .gitignore, etc...
# --hidden: Search hidden files and folders
# --follow: Follow symlinks
# --glob: Additional conditions for search (in this case ignore everything in the .git/ folder)
export FZF_DEFAULT_COMMAND="rg --files --no-ignore --hidden --follow --glob '!.git/*'"
export FZF_ALT_C_OPTS="--height 50% --border --preview 'head -n 200 {}'"
export FZF_CTRL_T_OPTS="--height 50% --border --preview 'head -n 200 {}'"

###########################################################
# ALIASES
###########################################################

# update dotfile symlinks from version control
alias dotlink="$HOME/dots/install"

###########################################################
# Environment Configuration
###########################################################

# asdf plugin manager
. $HOME/.asdf/asdf.sh
. $HOME/.asdf/completions/asdf.bash

# fzf completions & keybindings
[ -f ~/.fzf.bash ] && source ~/.fzf.bash

# dienv environment managementt
(command -v direnv >> /dev/null) && eval "$(direnv hook bash)"
# starship shell prompt
((command -v direnv && command -v starship) >> /dev/null) && eval "$(starship init bash)"
# zoxide autojump
((command -v direnv && command -v zoxide) >> /dev/null) && eval "$(zoxide init bash)"


# interactive srun wrapper for hpc
mkshell() {
    srun $@ --pty bash
}

# if we're in an interactive ssh shell and NOT in a tmux shell, reconnect or create an ssh_tmux session
# if [[ $- == *i* ]] && [[ -z "$TMUX" ]] && [[ -n "$SSH_CONNECTION" ]]; then
#     # tmux attach-session -t ssh_tmux || tmux new-session -s ssh_tmux
#     tmux new-session -A -s ssh_tmux
# fi
